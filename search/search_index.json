{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TUGAS PENAMBANGAN DATA NAMA : Melyana Febrianti NIM : 180411100110 Menganalisa Data Statistika Data Mining adalah proses yang menggunakan teknik statistik, matematika, kecerdasan buatan, machine learning untuk mengekstraksi dan mengidentifikasi informasi yang bermanfaat dan pengetahuan yang terkait dari berbagai database besar (Turban dkk. 2005). Data mining (kadang disebut juga data or knowledge discovery) adalah proses menganalisa data dari perspektif yang berbeda dan menyimpulkannya menjadi informasi-informasi penting yang dapat dipakai untuk meningkatkan keuntungan, memperkecil biaya pengeluaran, atau bahkan keduanya. Dengan data mining kita dapat menganalisis data dari berbagai dimensi dan sudut, mengelompokkannya, dan menyimpulkan relasi yang terbentuk. Secara teknis, data mining dapat disebut sebagai proses untuk menemukan korelasi atau pola dari ratusan atau ribuan field dari sebuah relasional database yang besar. Fungsi Data Mining Fungsi Prediksi (prediction) . Proses untuk menemukan pola dari data dengan menggunakan beberapa variabel untuk memprediksikan variabel lain yang tidak diketahui jenis atau nilainya. Fungsi Deskripsi (description) . Proses untuk menemukan suatu karakteristik penting dari data dalam suatu basis data. Fungsi Klasifikasi (classification) . Klasifikasi merupakan suatu proses untuk menemukan model atau fungsi untuk menggambarkan class atau konsep dari suatu data. Proses yang digunakan untuk mendeskripsikan data yang penting serta dapat meramalkan kecenderungan data pada masa depan. Fungsi Asosiasi (association) . Proses ini digunakan untuk menemukan suatu hubungan yang terdapat pada nilai atribut dari sekumpulan data. Proses Data Mining Deskripsi Deskripsi bertujuan untuk mengidentifikasi pola yang muncul secara berulang pada suatu data dan mengubah pola tersebut menjadi aturan dan kriteria yang dapat mudah dimengerti oleh para ahli pada domain aplikasinya. Aturan yang dihasilkan harus mudah dimengerti agar dapat dengan efektif meningkatkan tingkat pengetahuan (knowledge) pada sistem. Tugas deskriptif merupakan tugas data mining yang sering dibutuhkan pada teknik postprocessing untuk melakukan validasi dan menjelaskan hasil dari proses data mining. Postprocessing merupakan proses yang digunakan untuk memastikan hanya hasil yang valid dan berguna yang dapat digunakan oleh pihak yang berkepentingan. Prediksi Prediksi memiliki kemiripan dengan klasifikasi, akan tetapi data diklasifikasikan berdasarkan perilaku atau nilai yang diperkirakan pada masa yang akan datang. Contoh dari tugas prediksi misalnya untuk memprediksikan adanya pengurangan jumlah pelanggan dalam waktu dekat dan prediksi harga saham dalam tiga bulan yang akan datang. Estimasi Estimasi hampir sama dengan prediksi, kecuali variabel target estimasi lebih ke arah numerik dari pada ke arah kategori. Model dibangun menggunakan record lengkap yang menyediakan nilai dari variabel target sebagai nilai prediksi. Selanjutnya, pada peninjauan berikutnya estimasi nilai dari variabel target dibuat berdasarkan nilai variabel prediksi. Sebagai contoh, akan dilakukan estimasi tekanan darah sistolik pada pasien rumah sakit berdasarkan umur pasien, jenis kelamin, berat badan, dan level sodium darah. Hubungan antara tekanan darah sistolik dan nilai variabel prediksi dalam proses pembelajaran akan menghasilkan model estimasi. Klasifikasi Klasifikasi merupakan proses menemukan sebuah model atau fungsi yang mendeskripsikan dan membedakan data ke dalam kelas-kelas. Klasifikasi melibatkan proses pemeriksaan karakteristik dari objek dan memasukkan objek ke dalam salah satu kelas yang sudah didefinisikan sebelumnya. Clustering Clustering merupakan pengelompokan data tanpa berdasarkan kelas data tertentu ke dalam kelas objek yang sama. Sebuah kluster adalah kumpulan record yang memiliki kemiripan suatu dengan yang lainnya dan memiliki ketidakmiripan dengan record dalam kluster lain. Tujuannya adalah untuk menghasilkan pengelompokan objek yang mirip satu sama lain dalam kelompok-kelompok. Semakin besar kemiripan objek dalam suatu cluster dan semakin besar perbedaan tiap cluster maka kualitas analisis cluster semakin baik. Asosiasi Tugas asosiasi dalam data mining adalah menemukan atribut yang muncul dalam suatu waktu. Dalam dunia bisnis lebih umum disebut analisis keranjang belanja (market basket analisys). Tugas asosiasi berusaha untuk mengungkap aturan untuk mengukur hubungan antara dua atau lebih atribut. Ukuran Pemusatan Data Mean (rata-rata) Merupakan metode yang paling banyak digunakan untuk menggambarkan ukuran tendensi sentral. Mean dihitung dengan menjumlahkan semua nilai data pengamatan kemudian dibagi dengan banyaknya data. Median Median dari n pengukuran atau pengamatan x1, x2 ,..., xn adalah nilai pengamatan yang terletak di tengah gugus data setelah data tersebut diurutkan. Apabila banyaknya pengamatan ( n ) ganjil, median terletak tepat ditengah gugus data, sedangkan bila n genap, median diperoleh dengan cara interpolasi yaitu rata-rata dari dua data yang berada di tengah gugus data. Mode (modus) Mode adalah data yang paling sering muncul/terjadi. Untuk menentukan modus, pertama susun data dalam urutan meningkat atau sebaliknya, kemudian hitung frekuensinya. Nilai yang frekuensinya paling besar (sering muncul) adalah modus. Modus digunakan baik untuk tipe data numerik atau pun data kategoris. Modus tidak dipengaruhi oleh nilai ekstrem. Program Menganalisa Data import pandas as pd pd.read_csv( tugasPD1.csv ) stok perbulan jumlah terjual perbulan ukuran sepatu harga sepatu 100 51 38 320656 57 56 39 383437 83 61 36 216906 74 41 38 274888 80 64 39 219140 76 51 36 236341 88 48 41 375356 76 73 36 374049 52 43 41 258349 53 52 39 259108 58 78 40 206619 50 62 39 313086 80 60 38 360689 68 60 40 368729 85 47 37 266457 87 52 42 276448 74 51 36 186249 80 76 40 190974 90 45 36 180178 84 59 39 165151 54 58 39 161666 69 71 42 285283 88 46 38 275364 62 45 35 390573 78 78 40 340664 54 49 35 335688 67 42 37 314664 71 59 37 150828 84 63 39 150373 73 61 35 248104 62 60 39 338280 54 43 42 379159 56 41 37 206074 60 55 39 190279 78 47 37 349329 89 58 39 391941 83 78 36 327394 69 76 39 188526 82 45 43 394410 85 61 41 329195 93 79 35 394009 98 46 42 271258 90 60 42 170203 76 51 38 284091 100 55 42 167482 92 42 40 227260 65 48 39 274487 76 53 36 241875 54 52 38 229535 60 47 42 183346 82 51 43 179776 69 73 35 395020 54 67 38 307316 72 56 43 178835 73 44 36 311944 83 66 37 189499 71 73 40 228321 69 71 42 162154 68 53 37 349009 68 61 41 304768 88 74 42 273778 96 79 42 397434 60 62 38 361655 89 49 38 287059 78 40 42 232288 57 54 37 249324 94 68 41 309707 99 73 37 206736 59 66 35 355117 56 45 35 167936 97 69 40 195637 91 54 41 342680 83 54 36 180747 63 78 38 376958 94 54 36 311778 69 49 42 389793 83 75 36 231723 61 59 38 376875 75 47 39 312585 91 78 38 190291 85 77 36 326740 57 47 41 298334 53 67 42 341052 90 58 35 165233 59 69 38 236344 54 47 36 304261 86 63 41 259811 82 63 40 289813 91 57 42 392918 72 48 36 276441 68 79 38 327133 66 79 41 320483 73 79 41 386167 98 44 41 369695 83 69 36 374820 87 45 41 303287 76 51 43 213459 93 73 36 305221 91 50 35 179290 56 52 41 398903 from IPython.display import HTML, display import tabulate table=[ [ method ]+[x for x in df.columns], [ describe() ]+[' pre '+str(df[col].describe())+' /pre ' for col in df.columns], [ count() ]+[df[col].count() for col in df.columns], [ mean() ]+[df[col].mean() for col in df.columns], [ std() ]+[ {:.2f} .format(df[col].std()) for col in df.columns], [ min() ]+[df[col].min() for col in df.columns], [ max() ]+[df[col].max() for col in df.columns], [ q1() ]+[df[col].quantile(0.25) for col in df.columns], [ q2() ]+[df[col].quantile(0.50) for col in df.columns], [ q3() ]+[df[col].quantile(0.75) for col in df.columns], [ skew() ]+[ {:.2f} .format(df[col].skew()) for col in df.columns], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) method stok perbulan jumlah terjual perbulan ukuran sepatu harga sepatu describe() count 100.000000 mean 75.290000 std 13.936577 min 50.000000 25% 62.750000 50% 76.000000 75% 87.000000 max 100.000000 Name: stok perbulan, dtype: float64 count 100.000000 mean 58.580000 std 11.651661 min 40.000000 25% 48.750000 50% 57.500000 75% 68.250000 max 79.000000 Name: jumlah terjual perbulan, dtype: float64 count 100.000000 mean 38.760000 std 2.425121 min 35.000000 25% 36.750000 50% 39.000000 75% 41.000000 max 43.000000 Name: ukuran sepatu, dtype: float64 count 100.000000 mean 280502.980000 std 75857.842445 min 150373.000000 25% 211778.250000 50% 284687.000000 75% 341459.000000 max 398903.000000 Name: harga sepatu, dtype: float64 count() 100 100 100 100 mean() 75.29 58.58 38.76 280502.98 std() 13.94 11.65 2.43 75857.84 min() 50 40 35 150373 max() 100 79 43 398903 q1() 62.75 48.75 36.75 211778.25 q2() 76.0 57.5 39.0 284687.0 q3() 87.0 68.25 41.0 341459.0 skew() -0.09 0.34 0.05 -0.07 Menghitung Jarak Data Salah satu tantangan dalam era ini dengan datatabase yang memiliki banyak tipe data. Mengukur jarak adalah komponen utama dalam algoritma clustering berbasis jarak. Alogritma seperit Algoritma Partisioning misal K-Mean, K-medoidm dan fuzzy c-mean dan rough clustering bergantung pada jarak untuk melakukan pengelompokkan Sebelum menjelaskan tentang beberapa macam ukuran jarak, kita mendefinisikan terlebih dahulu yaiut v1,v2v1,v2 menyatakandua vektor yang menyatakan v1=x1,x2,...,xn,v2=y1,y2,...,yn,v1=x1,x2,...,xn,v2=y1,y2,...,yn, dimana xi,yixi,yi disebut attribut. Ada beberapa ukuran similaritas datau ukuran jarak, diantaranya Minkowski Distance Manhattan distance Euclidean distance Average Distance Weighted euclidean distance Chord distance Mahalanobis distance Cosine measure Pearson correlation Program Menghitung Jarak import pandas as pd df = pd.read_csv('haberman1.csv', nrows=10) df Age of patient at time of operation Patient's year of operation Number of positive axillary nodes detected Survival status 0 30 64 1 1 1 30 62 3 1 2 30 65 0 1 3 31 59 2 1 4 31 65 4 1 5 33 58 10 1 6 33 60 0 1 7 34 59 0 2 8 34 66 9 2 9 34 58 30 1 binary = [3] num = [0,1,2] from IPython.display import HTML, display import tabulate table=[ [ Data ]+[ Jarak ]+[ Numeric ]+[ Binary ], [ v1-v2 ]+[0]+[0]+[0], [ v1-v3 ]+[0]+[0]+[0], [ v2-v3 ]+[0]+[0]+[0], [ v3-v4 ]+[0]+[0]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Binary v1-v2 0 0 0 v1-v3 0 0 0 v2-v3 0 0 0 v3-v4 0 0 0 Menghitung Jarak Numeric def chordDist(v1,v2,jnis): jmlh=0 normv1=0 normv2=0 for x in range (len(jnis)): normv1=normv1+(int(df.values.tolist()[v1][jnis[x]])**2) normv2=normv2+(int(df.values.tolist()[v2][jnis[x]])**2) jmlh=jmlh+(int(df.values.tolist()[v1][jnis[x]])*int(df.values.tolist()[v2][jnis[x]])) return ((2-(2*jmlh/(normv1*normv2)))**0.5) from IPython.display import HTML, display import tabulate table=[ [ Data ]+[ Jarak ]+[ Numeric ]+[ Binary ], [ v1-v2 ]+[0]+[chordDist(0,1,num)]+[0], [ v1-v3 ]+[0]+[chordDist(0,2,num)]+[0], [ v2-v3 ]+[0]+[chordDist(1,2,num)]+[0], [ v3-v4 ]+[0]+[chordDist(2,3,num)]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Binary v1-v2 0 1.41421356237 0 v1-v3 0 1.41421356237 0 v2-v3 0 1.41421356237 0 v3-v4 0 1.41421356237 0 Menghitung Jarak Binary def binaryDist(v1,v2,jnis): q=0 r=0 s=0 t=0 for x in range (len(jnis)): if (int(df.values.tolist()[v1][jnis[x]]))==1 and (int(df.values.tolist()[v2][jnis[x]]))==1: q=q+1 elif (int(df.values.tolist()[v1][jnis[x]]))==1 and (int(df.values.tolist()[v2][jnis[x]]))==2: r=r+1 elif (int(df.values.tolist()[v1][jnis[x]]))==2 and (int(df.values.tolist()[v2][jnis[x]]))==1: s=s+1 else: t=t+1 return ((r+s)/(q+r+s+t)) from IPython.display import HTML, display import tabulate table=[ [ Data ]+[ Jarak ]+[ Numeric ]+[ Binary ], [ v1-v2 ]+[0]+[chordDist(0,1,num)]+[binaryDist(0,1,binary)], [ v1-v3 ]+[0]+[chordDist(0,2,num)]+[binaryDist(0,2,binary)], [ v2-v3 ]+[0]+[chordDist(1,2,num)]+[binaryDist(1,2,binary)], [ v3-v4 ]+[0]+[chordDist(2,3,num)]+[binaryDist(2,3,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Binary v1-v2 0 1.41421356237 0 v1-v3 0 1.41421356237 0 v2-v3 0 1.41421356237 0 v3-v4 0 1.41421356237 0","title":"TUGAS PENAMBANGAN DATA"},{"location":"#tugas-penambangan-data","text":"NAMA : Melyana Febrianti NIM : 180411100110","title":"TUGAS PENAMBANGAN DATA"},{"location":"#menganalisa-data-statistika","text":"Data Mining adalah proses yang menggunakan teknik statistik, matematika, kecerdasan buatan, machine learning untuk mengekstraksi dan mengidentifikasi informasi yang bermanfaat dan pengetahuan yang terkait dari berbagai database besar (Turban dkk. 2005). Data mining (kadang disebut juga data or knowledge discovery) adalah proses menganalisa data dari perspektif yang berbeda dan menyimpulkannya menjadi informasi-informasi penting yang dapat dipakai untuk meningkatkan keuntungan, memperkecil biaya pengeluaran, atau bahkan keduanya. Dengan data mining kita dapat menganalisis data dari berbagai dimensi dan sudut, mengelompokkannya, dan menyimpulkan relasi yang terbentuk. Secara teknis, data mining dapat disebut sebagai proses untuk menemukan korelasi atau pola dari ratusan atau ribuan field dari sebuah relasional database yang besar.","title":"Menganalisa Data Statistika"},{"location":"#fungsi-data-mining","text":"Fungsi Prediksi (prediction) . Proses untuk menemukan pola dari data dengan menggunakan beberapa variabel untuk memprediksikan variabel lain yang tidak diketahui jenis atau nilainya. Fungsi Deskripsi (description) . Proses untuk menemukan suatu karakteristik penting dari data dalam suatu basis data. Fungsi Klasifikasi (classification) . Klasifikasi merupakan suatu proses untuk menemukan model atau fungsi untuk menggambarkan class atau konsep dari suatu data. Proses yang digunakan untuk mendeskripsikan data yang penting serta dapat meramalkan kecenderungan data pada masa depan. Fungsi Asosiasi (association) . Proses ini digunakan untuk menemukan suatu hubungan yang terdapat pada nilai atribut dari sekumpulan data.","title":"Fungsi Data Mining"},{"location":"#proses-data-mining","text":"Deskripsi Deskripsi bertujuan untuk mengidentifikasi pola yang muncul secara berulang pada suatu data dan mengubah pola tersebut menjadi aturan dan kriteria yang dapat mudah dimengerti oleh para ahli pada domain aplikasinya. Aturan yang dihasilkan harus mudah dimengerti agar dapat dengan efektif meningkatkan tingkat pengetahuan (knowledge) pada sistem. Tugas deskriptif merupakan tugas data mining yang sering dibutuhkan pada teknik postprocessing untuk melakukan validasi dan menjelaskan hasil dari proses data mining. Postprocessing merupakan proses yang digunakan untuk memastikan hanya hasil yang valid dan berguna yang dapat digunakan oleh pihak yang berkepentingan. Prediksi Prediksi memiliki kemiripan dengan klasifikasi, akan tetapi data diklasifikasikan berdasarkan perilaku atau nilai yang diperkirakan pada masa yang akan datang. Contoh dari tugas prediksi misalnya untuk memprediksikan adanya pengurangan jumlah pelanggan dalam waktu dekat dan prediksi harga saham dalam tiga bulan yang akan datang. Estimasi Estimasi hampir sama dengan prediksi, kecuali variabel target estimasi lebih ke arah numerik dari pada ke arah kategori. Model dibangun menggunakan record lengkap yang menyediakan nilai dari variabel target sebagai nilai prediksi. Selanjutnya, pada peninjauan berikutnya estimasi nilai dari variabel target dibuat berdasarkan nilai variabel prediksi. Sebagai contoh, akan dilakukan estimasi tekanan darah sistolik pada pasien rumah sakit berdasarkan umur pasien, jenis kelamin, berat badan, dan level sodium darah. Hubungan antara tekanan darah sistolik dan nilai variabel prediksi dalam proses pembelajaran akan menghasilkan model estimasi. Klasifikasi Klasifikasi merupakan proses menemukan sebuah model atau fungsi yang mendeskripsikan dan membedakan data ke dalam kelas-kelas. Klasifikasi melibatkan proses pemeriksaan karakteristik dari objek dan memasukkan objek ke dalam salah satu kelas yang sudah didefinisikan sebelumnya. Clustering Clustering merupakan pengelompokan data tanpa berdasarkan kelas data tertentu ke dalam kelas objek yang sama. Sebuah kluster adalah kumpulan record yang memiliki kemiripan suatu dengan yang lainnya dan memiliki ketidakmiripan dengan record dalam kluster lain. Tujuannya adalah untuk menghasilkan pengelompokan objek yang mirip satu sama lain dalam kelompok-kelompok. Semakin besar kemiripan objek dalam suatu cluster dan semakin besar perbedaan tiap cluster maka kualitas analisis cluster semakin baik. Asosiasi Tugas asosiasi dalam data mining adalah menemukan atribut yang muncul dalam suatu waktu. Dalam dunia bisnis lebih umum disebut analisis keranjang belanja (market basket analisys). Tugas asosiasi berusaha untuk mengungkap aturan untuk mengukur hubungan antara dua atau lebih atribut.","title":"Proses Data Mining"},{"location":"#ukuran-pemusatan-data","text":"Mean (rata-rata) Merupakan metode yang paling banyak digunakan untuk menggambarkan ukuran tendensi sentral. Mean dihitung dengan menjumlahkan semua nilai data pengamatan kemudian dibagi dengan banyaknya data. Median Median dari n pengukuran atau pengamatan x1, x2 ,..., xn adalah nilai pengamatan yang terletak di tengah gugus data setelah data tersebut diurutkan. Apabila banyaknya pengamatan ( n ) ganjil, median terletak tepat ditengah gugus data, sedangkan bila n genap, median diperoleh dengan cara interpolasi yaitu rata-rata dari dua data yang berada di tengah gugus data. Mode (modus) Mode adalah data yang paling sering muncul/terjadi. Untuk menentukan modus, pertama susun data dalam urutan meningkat atau sebaliknya, kemudian hitung frekuensinya. Nilai yang frekuensinya paling besar (sering muncul) adalah modus. Modus digunakan baik untuk tipe data numerik atau pun data kategoris. Modus tidak dipengaruhi oleh nilai ekstrem.","title":"Ukuran Pemusatan Data"},{"location":"#program-menganalisa-data","text":"import pandas as pd pd.read_csv( tugasPD1.csv ) stok perbulan jumlah terjual perbulan ukuran sepatu harga sepatu 100 51 38 320656 57 56 39 383437 83 61 36 216906 74 41 38 274888 80 64 39 219140 76 51 36 236341 88 48 41 375356 76 73 36 374049 52 43 41 258349 53 52 39 259108 58 78 40 206619 50 62 39 313086 80 60 38 360689 68 60 40 368729 85 47 37 266457 87 52 42 276448 74 51 36 186249 80 76 40 190974 90 45 36 180178 84 59 39 165151 54 58 39 161666 69 71 42 285283 88 46 38 275364 62 45 35 390573 78 78 40 340664 54 49 35 335688 67 42 37 314664 71 59 37 150828 84 63 39 150373 73 61 35 248104 62 60 39 338280 54 43 42 379159 56 41 37 206074 60 55 39 190279 78 47 37 349329 89 58 39 391941 83 78 36 327394 69 76 39 188526 82 45 43 394410 85 61 41 329195 93 79 35 394009 98 46 42 271258 90 60 42 170203 76 51 38 284091 100 55 42 167482 92 42 40 227260 65 48 39 274487 76 53 36 241875 54 52 38 229535 60 47 42 183346 82 51 43 179776 69 73 35 395020 54 67 38 307316 72 56 43 178835 73 44 36 311944 83 66 37 189499 71 73 40 228321 69 71 42 162154 68 53 37 349009 68 61 41 304768 88 74 42 273778 96 79 42 397434 60 62 38 361655 89 49 38 287059 78 40 42 232288 57 54 37 249324 94 68 41 309707 99 73 37 206736 59 66 35 355117 56 45 35 167936 97 69 40 195637 91 54 41 342680 83 54 36 180747 63 78 38 376958 94 54 36 311778 69 49 42 389793 83 75 36 231723 61 59 38 376875 75 47 39 312585 91 78 38 190291 85 77 36 326740 57 47 41 298334 53 67 42 341052 90 58 35 165233 59 69 38 236344 54 47 36 304261 86 63 41 259811 82 63 40 289813 91 57 42 392918 72 48 36 276441 68 79 38 327133 66 79 41 320483 73 79 41 386167 98 44 41 369695 83 69 36 374820 87 45 41 303287 76 51 43 213459 93 73 36 305221 91 50 35 179290 56 52 41 398903 from IPython.display import HTML, display import tabulate table=[ [ method ]+[x for x in df.columns], [ describe() ]+[' pre '+str(df[col].describe())+' /pre ' for col in df.columns], [ count() ]+[df[col].count() for col in df.columns], [ mean() ]+[df[col].mean() for col in df.columns], [ std() ]+[ {:.2f} .format(df[col].std()) for col in df.columns], [ min() ]+[df[col].min() for col in df.columns], [ max() ]+[df[col].max() for col in df.columns], [ q1() ]+[df[col].quantile(0.25) for col in df.columns], [ q2() ]+[df[col].quantile(0.50) for col in df.columns], [ q3() ]+[df[col].quantile(0.75) for col in df.columns], [ skew() ]+[ {:.2f} .format(df[col].skew()) for col in df.columns], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) method stok perbulan jumlah terjual perbulan ukuran sepatu harga sepatu describe() count 100.000000 mean 75.290000 std 13.936577 min 50.000000 25% 62.750000 50% 76.000000 75% 87.000000 max 100.000000 Name: stok perbulan, dtype: float64 count 100.000000 mean 58.580000 std 11.651661 min 40.000000 25% 48.750000 50% 57.500000 75% 68.250000 max 79.000000 Name: jumlah terjual perbulan, dtype: float64 count 100.000000 mean 38.760000 std 2.425121 min 35.000000 25% 36.750000 50% 39.000000 75% 41.000000 max 43.000000 Name: ukuran sepatu, dtype: float64 count 100.000000 mean 280502.980000 std 75857.842445 min 150373.000000 25% 211778.250000 50% 284687.000000 75% 341459.000000 max 398903.000000 Name: harga sepatu, dtype: float64 count() 100 100 100 100 mean() 75.29 58.58 38.76 280502.98 std() 13.94 11.65 2.43 75857.84 min() 50 40 35 150373 max() 100 79 43 398903 q1() 62.75 48.75 36.75 211778.25 q2() 76.0 57.5 39.0 284687.0 q3() 87.0 68.25 41.0 341459.0 skew() -0.09 0.34 0.05 -0.07","title":"Program Menganalisa Data"},{"location":"#menghitung-jarak-data","text":"Salah satu tantangan dalam era ini dengan datatabase yang memiliki banyak tipe data. Mengukur jarak adalah komponen utama dalam algoritma clustering berbasis jarak. Alogritma seperit Algoritma Partisioning misal K-Mean, K-medoidm dan fuzzy c-mean dan rough clustering bergantung pada jarak untuk melakukan pengelompokkan Sebelum menjelaskan tentang beberapa macam ukuran jarak, kita mendefinisikan terlebih dahulu yaiut v1,v2v1,v2 menyatakandua vektor yang menyatakan v1=x1,x2,...,xn,v2=y1,y2,...,yn,v1=x1,x2,...,xn,v2=y1,y2,...,yn, dimana xi,yixi,yi disebut attribut. Ada beberapa ukuran similaritas datau ukuran jarak, diantaranya Minkowski Distance Manhattan distance Euclidean distance Average Distance Weighted euclidean distance Chord distance Mahalanobis distance Cosine measure Pearson correlation","title":"Menghitung Jarak Data"},{"location":"#program-menghitung-jarak","text":"import pandas as pd df = pd.read_csv('haberman1.csv', nrows=10) df Age of patient at time of operation Patient's year of operation Number of positive axillary nodes detected Survival status 0 30 64 1 1 1 30 62 3 1 2 30 65 0 1 3 31 59 2 1 4 31 65 4 1 5 33 58 10 1 6 33 60 0 1 7 34 59 0 2 8 34 66 9 2 9 34 58 30 1 binary = [3] num = [0,1,2] from IPython.display import HTML, display import tabulate table=[ [ Data ]+[ Jarak ]+[ Numeric ]+[ Binary ], [ v1-v2 ]+[0]+[0]+[0], [ v1-v3 ]+[0]+[0]+[0], [ v2-v3 ]+[0]+[0]+[0], [ v3-v4 ]+[0]+[0]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Binary v1-v2 0 0 0 v1-v3 0 0 0 v2-v3 0 0 0 v3-v4 0 0 0 Menghitung Jarak Numeric def chordDist(v1,v2,jnis): jmlh=0 normv1=0 normv2=0 for x in range (len(jnis)): normv1=normv1+(int(df.values.tolist()[v1][jnis[x]])**2) normv2=normv2+(int(df.values.tolist()[v2][jnis[x]])**2) jmlh=jmlh+(int(df.values.tolist()[v1][jnis[x]])*int(df.values.tolist()[v2][jnis[x]])) return ((2-(2*jmlh/(normv1*normv2)))**0.5) from IPython.display import HTML, display import tabulate table=[ [ Data ]+[ Jarak ]+[ Numeric ]+[ Binary ], [ v1-v2 ]+[0]+[chordDist(0,1,num)]+[0], [ v1-v3 ]+[0]+[chordDist(0,2,num)]+[0], [ v2-v3 ]+[0]+[chordDist(1,2,num)]+[0], [ v3-v4 ]+[0]+[chordDist(2,3,num)]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Binary v1-v2 0 1.41421356237 0 v1-v3 0 1.41421356237 0 v2-v3 0 1.41421356237 0 v3-v4 0 1.41421356237 0 Menghitung Jarak Binary def binaryDist(v1,v2,jnis): q=0 r=0 s=0 t=0 for x in range (len(jnis)): if (int(df.values.tolist()[v1][jnis[x]]))==1 and (int(df.values.tolist()[v2][jnis[x]]))==1: q=q+1 elif (int(df.values.tolist()[v1][jnis[x]]))==1 and (int(df.values.tolist()[v2][jnis[x]]))==2: r=r+1 elif (int(df.values.tolist()[v1][jnis[x]]))==2 and (int(df.values.tolist()[v2][jnis[x]]))==1: s=s+1 else: t=t+1 return ((r+s)/(q+r+s+t)) from IPython.display import HTML, display import tabulate table=[ [ Data ]+[ Jarak ]+[ Numeric ]+[ Binary ], [ v1-v2 ]+[0]+[chordDist(0,1,num)]+[binaryDist(0,1,binary)], [ v1-v3 ]+[0]+[chordDist(0,2,num)]+[binaryDist(0,2,binary)], [ v2-v3 ]+[0]+[chordDist(1,2,num)]+[binaryDist(1,2,binary)], [ v3-v4 ]+[0]+[chordDist(2,3,num)]+[binaryDist(2,3,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Binary v1-v2 0 1.41421356237 0 v1-v3 0 1.41421356237 0 v2-v3 0 1.41421356237 0 v3-v4 0 1.41421356237 0","title":"Program Menghitung Jarak"}]}